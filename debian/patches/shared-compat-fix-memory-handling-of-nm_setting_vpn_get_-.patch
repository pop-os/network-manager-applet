From: "Jan Alexander Steffens (heftig)" <jan.steffens@gmail.com>
Date: Wed, 20 Dec 2017 13:23:12 +0100
Subject: shared/compat: fix memory handling of nm_setting_vpn_get_*_keys

The compat implementations return a (transfer none) strv instead of a
(transfer container) one. This has caused double frees in nm-applet:
https://bugs.archlinux.org/task/56772

Don't copy the keys and don't free the container later.

[thaller@redhat.com: patch adjusted to avoid compiler warning]

Patch imported from NetworkManager commit 8ac8c01162235c2c198bfaf25fb7d1a57a595ce5.

Fixes: e93ca7fc129ec0f29f5313a3aa12839914df8fa2
(cherry picked from commit 0c90e08f77b71d2bda699cf032fceec0122bbf82)
---
 shared/nm-utils/nm-compat.c | 10 +---------
 1 file changed, 1 insertion(+), 9 deletions(-)

diff --git a/shared/nm-utils/nm-compat.c b/shared/nm-utils/nm-compat.c
index 22ab675..47035e6 100644
--- a/shared/nm-utils/nm-compat.c
+++ b/shared/nm-utils/nm-compat.c
@@ -30,7 +30,7 @@ _get_keys_cb (const char *key, const char *val, gpointer user_data)
 {
 	GPtrArray *a = user_data;
 
-	g_ptr_array_add (a, g_strdup (key));
+	g_ptr_array_add (a, (gpointer) key);
 }
 
 static const char **
@@ -55,14 +55,6 @@ _get_keys (NMSettingVpn *setting,
 		g_ptr_array_sort (a, nm_strcmp_p);
 		g_ptr_array_add (a, NULL);
 		keys = (const char **) g_ptr_array_free (g_steal_pointer (&a), FALSE);
-
-		/* we need to cache the keys *somewhere*. */
-		g_object_set_qdata_full (G_OBJECT (setting),
-		                         is_secrets
-		                         ? NM_CACHED_QUARK ("libnm._nm_setting_vpn_get_secret_keys")
-		                         : NM_CACHED_QUARK ("libnm._nm_setting_vpn_get_data_keys"),
-		                         keys,
-		                         (GDestroyNotify) g_strfreev);
 	}
 
 	NM_SET_OUT (out_length, len);
